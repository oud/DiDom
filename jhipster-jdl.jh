entity UserInfo {
	userType TypeUser required,
	actionRange Integer,
	availability Boolean required
}

relationship OneToOne {
	UserInfo{user(login)} to User    
}
		

enum PaymentType {
	PER_HOUR, FIXED_PRICE
}

entity Skill {
	skillName String required
}

entity HasSkill {
	paymentType PaymentType required,
	paymentAmont BigDecimal required
}

relationship ManyToOne {
	Job{mainSkill(skillName)} to Skill{job}
}


relationship ManyToOne {
	HasSkill{user(login)} to User
	HasSkill{skill(skillName)} to Skill
}


entity Job {
	title String required,
    	description String required,
	StartDate LocalDate,
	duration Duration
}


relationship ManyToOne {
	Job{user(login)} to User
}


enum Duration {
	1_HOUR, 2_5_HOURS, 1_DAY, 2_5_DAYS, 1_MONTH
}

enum TypeUser {
	RECRUITER, CANDIDATE
}

enum ProposalStatus {
	SENT, ACCEPTED, REJECTED, STARTED, FINISHED
}

entity Location {
	streetAddress String,
	postalCode String,
	city String required
}

entity Country {
	countryName String required
}

relationship ManyToOne {
	UserInfo{address} to Location
}

relationship ManyToOne {
	Location{country(countryName)} to Country
}


entity Proposal {
	proposalTime ZonedDateTime required,
	paymentType PaymentType required,
	paymentAmount BigDecimal required,
	currentProposalStatus ProposalStatus required,
	clientGrade Integer,
	clientComment String,
	freelanceGrade Integer,
	freelanceComment String	
}


entity Message {
    	messageTime ZonedDateTime,
    	messageText String,
	proposalStatus ProposalStatus    
}

entity Attachment {
	attachmentLink String
}

entity Contract {
	startTime ZonedDateTime required,
	endTime ZonedDateTime required,
	paymentType PaymentType required,
	paymentAmount BigDecimal required
}

relationship ManyToOne {
	Proposal{job} to Job{proposal},
	Proposal{User(login)} to User{proposal},
	Message{proposal} to Proposal{message},
	Contract{proposal} to Proposal{contract},
	Attachment{message} to Message{attachment}    
}

relationship ManyToMany {
    	Message{User(login)} to User
	Contract{User(login)} to User	
}

// Set pagination options
paginate all with infinite-scroll


// Set service options to all except few
service all with serviceClass

search Job, HasSkill with elasticsearch